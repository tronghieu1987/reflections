How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It narrows down areas that I don't need to look at.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    In a programming role, testing different codes and then reverting back would be very often.
    This would help to revert to older versions easily.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: being aware of what changes I want to make (with the comment)
    	- Have a logical change, which would make reviewing easier
    Cons: if I forget to save then the changes would disappear.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because programming works usuallly involve working and changing multiples files together; these files are dependent to each oter.

How can you use the commands git log and git diff to view the history of files?

    - git log: to view the version control ID
    - git diff: to compare 2 versions by putting their IDs in the command

How might using version control make you more confident to make changes that
could break something?

    Because I am assured that I can go back to the old version anytime.

Now that you have your workspace set up, what do you want to try using Git for?

    To test and experiment.